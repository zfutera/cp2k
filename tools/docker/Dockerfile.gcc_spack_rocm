#
# This file was created by generate_dockerfiles.py.
# Usage: docker build -f ./Dockerfile.gcc_spack_rocm ../../
#

FROM docker.io/rocm/dev-ubuntu-22.04:5.5.1-complete

ARG ROCM_ARCH=gfx90a
ARG ROCM_VERSION=5.5.1
ARG AMDGPU_VERSION=5.4.3
ENV DEBIAN_FRONTEND=noninteractive

ENV FORCE_UNSAFE_CONFIGURE 1

ENV PATH="/spack/bin:${PATH}"

ENV CMAKE_VERSION=3.26.3
ENV MPICH_VERSION=3.4.3

RUN apt-get -y update && apt-get install -y apt-utils

RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends ca-certificates curl gnupg && \
  apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
  sudo \
  libelf1 \
  xz-utils \
  liblzma-dev \
  libnuma-dev \
  build-essential \
  git \
  vim-nox \
  cmake-curses-gui \
  kmod \
  file \
  libbz2-dev \
  python3 \
  python3-dev \
  python3-pip \
  rocm-dev gcc g++ gfortran clang git make unzip \
  vim wget pkg-config python3-pip python3-venv curl tcl m4 cpio automake \
  apt-transport-https ca-certificates gnupg software-properties-common \
  patchelf meson

# install CMake
RUN wget https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-linux-x86_64.tar.gz -O cmake.tar.gz && \
    tar zxvf cmake.tar.gz --strip-components=1 -C /usr

# get latest version of spack
RUN git clone https://github.com/spack/spack.git

# set the location of packages built by spack
RUN spack config add config:install_tree:root:/opt/local
# set amdgpu_target for all packages
RUN spack config add packages:all:variants:amdgpu_target=${ROCM_ARCH}
# set basic x86_64 architecture
RUN spack config add packages:all:target:x86_64

# find gcc and clang compilers
RUN spack compiler find
RUN spack external find --all

# install yq (utility to manipulate the yaml files)
RUN wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_386 && chmod a+x /usr/local/bin/yq

# change the fortran compilers: for gcc the gfortran is already properly set and the change has no effect; add it for clang
RUN yq -i '.compilers[0].compiler.flags.fflags = "-fallow-argument-mismatch"' /root/.spack/linux/compilers.yaml

# copy bunch of things from the ci
COPY ci/spack /root/spack-recipe
RUN spack repo add /root/spack-recipe/ --scope user

# find gcc and clang compilers
#RUN spack compiler find
#RUN spack external find --all

ENV SPEC_OPENBLAS="cp2k@master%gcc build_system=cmake +sirius +elpa +libxc +libint smm=libxsmm +spglib +cosma +rocm amdgpu_target=gfx90a +pexsi +plumed +libvori +openmp ^openblas+fortran ^dbcsr+mpi+rocm~shared+openmp amdgpu_target=gfx906 ^cosma+shared~tests~apps+rocm"
# install all dependencies
RUN spack install --only=dependencies --fail-fast $SPEC_OPENBLAS ^openmpi
